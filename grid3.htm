<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>grid calculator</title>
    <meta
      name="description"
      content="Experience precision and ease with our online calculator, designed to mimic the familiar functionality of a desktop calculator. Ideal for students, professionals, and everyday use, our tool offers all the standard operations including addition, subtraction, multiplication, and division, plus advanced features like percentages and square roots. Start calculating today for quick, accurate results!"
    />
    <script
      src="https://kit.fontawesome.com/5b728db556.js"
      crossorigin="anonymous"
    ></script>
    <!-- <link rel="font-family" href="DIGITAL-7.TTF"> -->
    <style>
      @font-face {
        font-family: "DIGITAL-7";
        src: url("DIGITAL-7.TTF");
      }
      * {
        box-sizing: border-box;
      }

      body {
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgb(255, 255, 255);
      }

      .calculator {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(6, 1fr);
        background-color: rgba(246, 212, 165, 0.366);
        height: 500px;
        width: 300px;
        border: 1px solid rgb(185, 183, 183);
        box-shadow: 2px 10px 30px 15px rgb(227, 225, 225);
        border-radius: 10px;
        padding: 2px;
      }

      .screen {
        display: grid;
        grid-column: 1/5;
        border-radius: 10px 10px 0 0;
        grid-template-rows: 1fr 2fr;
        margin: 1px;
        border: 1.5px lightgray solid;
        /* <inset?> x y blur spread */
        box-shadow: inset 2px 2px 0px 0px rgb(227, 225, 225);
        background-color: rgba(255, 255, 255, 0.863);
      }

      .screen-row {
        background-color: transparent;
      }

      #upper-row {
        border-radius: 10px 10px 0 0;
        border: none;
        width: 100%;
        /* height: 50px; */
        font-size: 20px;
        text-align: right;
        /* border: 3px solid black; */
        /* border-radius: 10px 10px 0 0; */
        padding-top: 8px;
        padding-right: 10px;
        font-family: "DIGITAL-7", sans-serif;
      }

      #lower-row {
        /* border-radius: 10px 10px 0 0;  */
        border: none;
        width: 100%;
        /* height: 70px; */
        font-size: 2.5em;
        text-align: right;
        padding-right: 10px;
        font-family: "DIGITAL-7", sans-serif;
      }

      .btn {
        background-color: rgba(255, 255, 255, 0.86);
        margin: 3px;
        font-size: 1.6em;
        font-weight: bold;
        box-shadow: 2px 2px 0 0px lightgray;
        border-radius: 5px;
        border: none;
        cursor: pointer;
      }
      .btn:hover {
        background-color: rgb(243, 243, 243);
      }
      .btn:active {
        background-color: rgb(199, 199, 199);
        box-shadow: 2px 2px 0 0px rgb(105, 105, 105);
      }
    </style>
  </head>
  <body>
    <div class="calculator">
      <div class="screen">
        <input type="text" disabled class="screen-row" name="" id="upper-row" />
        <input type="text" disabled class="screen-row" name="" id="lower-row" />
      </div>

      <button class="btn num5" id="backBtn" data-hidden-value="backBtn">
        <i class="fa-solid fa-delete-left"></i>
      </button>
      <button class="btn num6">CE</button>
      <button class="btn num8">C</button>
      <button class="btn num7 op">&div;</button>
      <button class="btn num1">1</button>
      <button class="btn num2">2</button>
      <button class="btn num3">3</button>
      <button class="btn times op">x</button>
      <button class="btn num4">4</button>
      <button class="btn num5">5</button>
      <button class="btn num6">6</button>
      <button class="btn minus op">-</button>
      <button class="btn num7">7</button>
      <button class="btn num8">8</button>
      <button class="btn num9">9</button>
      <button class="btn plus op">+</button>
      <button class="btn percent op">%</button>
      <button class="btn num0">0</button>
      <button class="btn plus">.</button>
      <button class="btn plus">=</button>
    </div>
    <script>
      const buttons = document.querySelectorAll(".btn");
      const upperRow = document.getElementById("upper-row");
      const lowerRow = document.getElementById("lower-row");
      const backBtn = document.getElementById("backBtn");
      let lastEntry = "0";
      let entry = "";
      let lastUpperChar = "";

      upperRow.value = "";
      lowerRow.value = "0";

      const isOp = (character) =>
        ["+", "-", "x", "\u00F7", "&divide;", "รท", "%"].includes(character);

      const isNumeric = (character) =>
        ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."].includes(
          character
        );

      const isNumOrOp = (character) => isOp(character) || isNumeric(character);

      function clearScreen() {
        upperRow.value = "";
        lowerRow.value = "0";
      }

      function replaceFromNonEval() {
        if (upperRow.value.includes("x") || upperRow.value.includes("รท")) {
          upperRow.value = upperRow.value.replace(/x/g, "*");
          upperRow.value = upperRow.value.replace(/รท/g, "/");
        }
      }

      function replaceToNonEval() {
        if (upperRow.value.includes("*") || upperRow.value.includes("/")) {
          upperRow.value = upperRow.value.replace(/\*/g, "x");
          upperRow.value = upperRow.value.replace(/\//g, "รท");
        }
      }

      function getLastUpperRowOpIndex() {
        let lastUpperRowOpIndex = -1;

        for (let i = upperRow.value.length - 1; i >= 0; i--) {
          if (isOp(upperRow.value[i])) {
            lastUpperRowOpIndex = i;
            break;
          }
        }

        return lastUpperRowOpIndex;
      }

      function calculateNegativeNumbers() {
        console.log("entry is a equal sign and lower row has a minus");
        const lastUpperRowOpIndex = getLastUpperRowOpIndex();

        // Set upperRow.value to lowerRow.value and then add the part of upperRow.value starting from the last operator
        if (lastUpperRowOpIndex !== -1) {
          lowerRow.value = lowerRow.value.replace(/=/g, "");
          console.log("if condition true");
          upperRow.value =
            lowerRow.value + upperRow.value.slice(lastUpperRowOpIndex);
          upperRow.value = upperRow.value.replace(lastUpperChar, "");
          replaceFromNonEval();
          lowerRow.value = eval(upperRow.value);
          upperRow.value += "=";
          replaceToNonEval();
        } else {
          // If no operator is found, append lowerRow.value to the entire upperRow.value
          upperRow.value = lowerRow.value + upperRow.value;
        }
      }

      function evaluateEntry() {
        if (isOp(entry)) {
          evaluateOpEntry();
        } else if (isNumeric(entry)) {
          evaluateNumericEntry();
        } else if (entry === "C") {
          clearScreen();
        } else if (entry === "CE") {
          lowerRow.value = "0";
        } else if (entry === "=") {
          evaluateEquals();
        } else {
          // number was pressed
        }
      }

      function calculateConsecutiveEquals() {
        let lastUpperRowOpIndex = getLastUpperRowOpIndex();
        lowerRow.value = lowerRow.value.replace(entry, "");
        // Remove everything up to the last operator
        upperRow.value = upperRow.value.slice(lastUpperRowOpIndex);
        upperRow.value = upperRow.value.replace(upperRow.value.slice(-1), "");
        upperRow.value = lowerRow.value + upperRow.value;
        replaceFromNonEval();
        lowerRow.value = eval(upperRow.value);
        replaceToNonEval();
        upperRow.value += entry;
      }

      function calculateEqualsWithUpperRow() {
        lowerRow.value = lowerRow.value.replace(entry, "");
        upperRow.value += lowerRow.value;
        replaceFromNonEval();
        lowerRow.value = eval(upperRow.value);
        upperRow.value += "=";
        replaceToNonEval();
      }

      function evaluateNumericEntry() {
        if (isOp(lastEntry)) {
          lowerRow.value = entry;
          console.log("this is a num and last entry was a operator");
        } else {
          if (
            lowerRow.value === "0" &&
            isNumOrOp(entry) &&
            entry !== backBtn.textContent
          ) {
            lowerRow.value = entry;
          } else {
            lowerRow.value += entry;
          }
        }
      }

      function evaluateOpEntry() {
        if (isOp(lastEntry)) {
          upperRow.value = upperRow.value.replace(lastUpperChar, entry);
          console.log("lastUpperChar", lastUpperChar);
        } else if (lastEntry === "=") {
          //alert('=')
        } else {
          if (isOp(lastUpperChar)) {
            console.log(
              "upper row has a op and last entry was a number and this entrty is a op"
            );
            upperRow.value += lowerRow.value;
            replaceFromNonEval();
            lowerRow.value = eval(upperRow.value);
            replaceToNonEval();
            upperRow.value = lowerRow.value + entry;
          } else {
            // entry is a op and last entry was a number and lastupperchar was not a op or is empty
            upperRow.value += lowerRow.value + entry;
            console.log(
              "entry is a op and last entry was a number and last charchter of upper row was not a op or is empty"
            );
          }
        }
      }

      function evaluateEquals() {
        if (upperRow.value) {
          
          if (lastUpperChar === "=") {
            //alert(4)
            calculateConsecutiveEquals();
           // calculateNegativeNumbers();
          } else {
            calculateEqualsWithUpperRow();
          }
        } else {
          upperRow.value = lowerRow.value + entry;
        }
      }

      const performBackspace = () => {
        if (lowerRow.value.length <= 1) {
          console.log("last number");
          lowerRow.value = "0";
        } else if (lowerRow.value.length >= 2) {
          console.log("lower row has more then 1 number");
          lowerRow.value = lowerRow.value.slice(0, -1);
        }
      };

      backBtn.addEventListener("click", function () {
        performBackspace();
      });

      buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
          entry = btn.textContent;
          lastUpperChar = upperRow.value.slice(-1);
          evaluateEntry();
          lastEntry = entry;
        });
      });
    </script>
  </body>
</html>
